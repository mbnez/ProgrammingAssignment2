makeCacheMatrix <- function(x = matrix()){ ##define arg. with default mode matrix
  inv <- NULL ## inv as NULL, will hold val of matrix
  set <- function(y){  
    x <<-y
    inv <<- NULL
  }
  get <- function() {x}
  setInverse <- function(inverse) {inv <<- inverse}
  getInverse <- function() {inv}
  list(set = set, get = get, setInverse = setInverse, getInverse = getInverse)
}

cacheSolve <- function (x, ...){
  inv <- x$getInverse()
  if(!is.null(inv)){
    message('getting cached data')
    return(inv)
  }
  mat <-x$get()
  inv <- solve(mat, ...)
  x$setInverse(inv)
  inv
}
